name: Docker Images

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}

jobs:
  docker:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0

      - name: Install cargo-zigbuild and targets
        run: |
          cargo install --locked cargo-zigbuild
          rustup target add x86_64-unknown-linux-gnu

      - name: Build Linux binary for Docker
        run: |
          cargo zigbuild --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/custom-ddns ./custom-ddns

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: deimosfr/custom-ddns
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata (Alpine)
        id: meta-alpine
        uses: docker/metadata-action@v5
        with:
          images: deimosfr/custom-ddns
          tags: |
            type=ref,event=tag,suffix=-alpine
            type=raw,value=latest-alpine,enable={{is_default_branch}}

      - name: Build and push Debian image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.goreleaser
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Alpine image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.alpine.goreleaser
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}